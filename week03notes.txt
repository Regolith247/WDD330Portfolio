Object methods and object oriented programming:
Nothing too new or alarming. Though it is in Javascript now. So be aware of syntax oddities.

Function that's a property of an object is a method. The two need to be linked properly.

 “Design Patterns: Elements of Reusable Object-Oriented Software” by E. Gamma, R. Helm, R. Johnson, J. Vissides “Object-Oriented Analysis and Design with Applications” by G. Booch

Long version:

let user = {
  name: "John",
  age: 30
};

user.sayHi = function() {
  alert("Hello!");
};

user.sayHi(); // Hello!

Method shorthand:  
 
 let user = {
  // ...
};

// first, declare
function sayHi() {
  alert("Hello!");
};

// then add as a method
user.sayHi = sayHi;

user.sayHi(); // Hello!


Shorter syntax is preferred in most cases.

'this' keyword lets you access info inside of an object.
'this' can also be used in any function. ANY function.
You can even call the function with no object.
What exactly is 'strict' mode?
In JavaScript this is “free”, its value is evaluated at call-time and does not depend on where the method was declared, but rather on what object is “before the dot”.
Arrow functions have no 'this'.
Rules that set 'this' do not look at object definition. Only the moment of call matters.


JavaScript objects are similar to a hash or associative array in other programming languages (or even a JavaScript map ). 
Object literals are identical to C++ functions as far as I can tell.
Object literals are a distinguishing feature of the JavaScript language, as they allow objects to be created quickly without the need for defining a class.

const captainBritain = { name: 'Captain Britain', hero: bewitched ? false : 
Not sure how this is supposed to work.
Do more research on Javascipt properties and methods.
New properties and methods can be added to objects at any time in a program.

Node trees- very similar to data structures?
Not really- but very similar to Web Design that you've already learned.

Events- again, something that i have learned about already. Just need to make sure I can actually use it properly...


